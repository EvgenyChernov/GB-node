// 1 задание
// Сразу выводим 'Record 1' в консоль (синхронный код)
console.log('Record 1');

// Устанавливаем макрозадачу setTimeout, которая сработает после выполнения текущего стека и всех микрозадач
setTimeout(() => {
    // Эта часть кода выполнится в первой макрозадаче
    console.log('Record 2'); // Выводим 'Record 2' в консоль

    // Устанавливаем микрозадачу, которая выполнится после текущего вызова стека
    Promise.resolve().then(() => {
        // Внутри микрозадачи устанавливаем ещё одну макрозадачу setTimeout
        setTimeout(() => {
            // Эта часть кода выполнится во второй макрозадаче
            console.log('Record 3'); // Выводим 'Record 3' в консоль

            // Устанавливаем микрозадачу, которая выполнится после текущего вызова стека
            Promise.resolve().then(() => {
                console.log('Record 4'); // Выводим 'Record 4' в консоль
            });
        });
    });
});

// Сразу выводим 'Record 5' в консоль (синхронный код)
console.log('Record 5');

// Устанавливаем микрозадачу, которая выполнится после выполнения текущего стека
Promise.resolve().then(() =>
    // Внутри этой микрозадачи устанавливаем ещё одну микрозадачу
    Promise.resolve().then(() =>
        console.log('Record 6') // Выводим 'Record 6' в консоль
    )
);
